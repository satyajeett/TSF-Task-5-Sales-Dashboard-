<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook original-version='18.1' source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SampleSuperstore' inline='true' name='federated.0v5l4du09qe97i12mylle1b8rtua' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='textscan.1lan3390ie1brv1d86iyt0yvjes0'>
            <connection class='textscan' directory='C:/Users/satyajeet sharma/Desktop' filename='SampleSuperstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1lan3390ie1brv1d86iyt0yvjes0' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1lan3390ie1brv1d86iyt0yvjes0' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Revenue' datatype='real' name='[Calculation_231935404637024256]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])/SUM([Quantity])' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Sales (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[Sales]' peg='0' size='452' />
      </column>
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore.csv' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E]' role='measure' type='quantitative' />
      <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Count' name='[cnt:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[diff:cum:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[diff:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:cum:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Category:nk]' />
          <order field='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Sub-Category:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Region:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Region:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:sum:Profit:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:sum:Profit:qk:4]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[cum:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[diff:cum:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[diff:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:cum:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[cnt:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:sum:Profit:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:sum:Sales:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Profit:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' palette='gray_10_0' type='palette'>
            <map to='#616c77'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#889296'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
            <map to='#acb0b1'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore.csv' id='SampleSuperstore.csv_ECB1835B6DA544069D64DA46E2A7260E'>
            <properties context=''>
              <relation connection='textscan.1lan3390ie1brv1d86iyt0yvjes0' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Calibri' fontsize='18'>Sales of Sub-Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0v5l4du09qe97i12mylle1b8rtua' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l4du09qe97i12mylle1b8rtua'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:cum:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Sub-Category:nk]' direction='ASC' using='[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Sales:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:cum:sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#ffffff' />
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:cum:sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#666666' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Sales:qk] + [federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:cum:sum:Sales:qk])</rows>
        <cols>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{795F45F1-79FF-42B7-AE5F-B42D52AAC1C6}' />
    </worksheet>
    <worksheet name='Discounts'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Calibri' fontsize='18'>Discounts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0v5l4du09qe97i12mylle1b8rtua' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l4du09qe97i12mylle1b8rtua'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Discount])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:City:nk]' direction='DESC' using='[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Discount:qk]' />
          <slices>
            <column>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Category:nk]' />
              <text column='[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:City:nk]</rows>
        <cols>[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Discount:qk]</cols>
      </table>
      <simple-id uuid='{3F169661-1764-45D2-B94F-9BE3D802252C}' />
    </worksheet>
    <worksheet name='Region Wise Sales &amp; Profits'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Calibri' fontsize='18'>Region-Wise Sales &amp; Profits</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0v5l4du09qe97i12mylle1b8rtua' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l4du09qe97i12mylle1b8rtua'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <size column='[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Sales:qk]' />
              <text column='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Region:nk]' />
              <text column='[federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:sum:Sales:qk]' />
              <text column='[federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:sum:Profit:qk:3]' />
              <color column='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Region:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Region:nk]</run>
                <run>&gt;&#10;Sales: &lt;</run>
                <run>[federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:sum:Sales:qk]</run>
                <run>&gt;&#10;Profit: &lt;</run>
                <run>[federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:sum:Profit:qk:3]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B50F3C4A-84AC-4C35-9EEB-247C3FAC2A62}' />
    </worksheet>
    <worksheet name='Segament Wise Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Calibri' fontsize='18'>Segament-Wise Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0v5l4du09qe97i12mylle1b8rtua' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l4du09qe97i12mylle1b8rtua'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Segment:nk]' />
              <text column='[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Sales:qk]</rows>
        <cols>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Segment:nk]</cols>
      </table>
      <simple-id uuid='{04D3A53C-5474-4776-88E4-A0CC73446123}' />
    </worksheet>
    <worksheet name='State-Wise Profits'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Calibri' fontsize='18'>State-Wise Profits</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0v5l4du09qe97i12mylle1b8rtua' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v5l4du09qe97i12mylle1b8rtua'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field' type='PctTotal'>
                <order field='[federated.0v5l4du09qe97i12mylle1b8rtua].[Country]' />
                <order field='[federated.0v5l4du09qe97i12mylle1b8rtua].[State]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Profit:qk]' palette='green_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='background' value='false' />
            <format attr='enabled' id='barrier_line-land-polygon' value='false' />
            <format attr='enabled' id='barrier_line-land-line' value='false' />
            <format attr='enabled' id='national_park' value='false' />
            <format attr='enabled' id='pitch' value='false' />
            <format attr='enabled' id='industrial' value='false' />
            <format attr='enabled' id='built-up-area' value='false' />
            <format attr='enabled' id='water' value='false' />
            <format attr='enabled' id='waterway-river-canal' value='false' />
            <format attr='enabled' id='aeroway-polygon' value='false' />
            <format attr='enabled' id='aeroway-runway' value='false' />
            <format attr='enabled' id='aeroway-taxiway' value='false' />
            <format attr='enabled' id='parks' value='false' />
            <format attr='enabled' id='landcover_wood' value='false' />
            <format attr='enabled' id='landcover_scrub' value='false' />
            <format attr='enabled' id='landcover_grass' value='false' />
            <format attr='enabled' id='landcover_crop' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:State:nk]' />
              <text column='[federated.0v5l4du09qe97i12mylle1b8rtua].[pcto:sum:Profit:qk]' />
              <lod column='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:State:nk]' />
              <lod column='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Country:nk]' />
              <color column='[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Profit:qk]' />
              <geometry column='[federated.0v5l4du09qe97i12mylle1b8rtua].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.75762432813644409' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5l4du09qe97i12mylle1b8rtua].[Latitude (generated)]</rows>
        <cols>[federated.0v5l4du09qe97i12mylle1b8rtua].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F21F6F44-3C30-4472-94DC-24666F5E1921}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Sales Board'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='20'>Sales Board</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#555555' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-color' value='#b4b4b4' />
          <format attr='font-family' value='Calibri' />
          <format attr='font-size' value='18' />
          <format attr='text-align' value='auto' />
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
          <format attr='background-color' value='#000000' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='font-size' value='18' />
          <format attr='background-color' value='#e9ebe0' />
          <format attr='font-family' value='Calibri' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_32' value='center' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='11' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='32' param='vert' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='6155' id='31' w='99034' x='483' y='929'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='91987' id='30' param='vert' w='99034' x='483' y='7084'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='91987' id='28' param='horz' w='99034' x='483' y='7084'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='91987' id='18' param='horz' w='99034' x='483' y='7084'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='91987' id='14' param='vert' w='99034' x='483' y='7084'>
                    <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='91987' id='12' w='99034' x='483' y='7084'>
                      <zone h='45983' id='16' name='State-Wise Profits' w='49483' x='483' y='7084'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='46004' id='20' name='Discounts' w='32899' x='66618' y='53067'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='45983' id='24' name='Region Wise Sales &amp; Profits' w='49551' x='49966' y='7084'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='46004' id='25' name='Average Revenue' w='33309' x='33309' y='53067'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='46004' id='26' name='Segament Wise Sales' w='32826' x='483' y='53067'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{B26BD0AB-AA8F-43F4-BD6A-8DCC06A3268D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Region Wise Sales &amp; Profits'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Category:nk]</field>
            <field>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Region:nk]</field>
            <field>[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C97384DA-EE3B-47AE-B87A-AC9D24BDFF27}' />
    </window>
    <window class='worksheet' name='Segament Wise Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E9C5EFBB-CC73-439D-A19E-5892E71B9E30}' />
    </window>
    <window class='worksheet' name='Average Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0v5l4du09qe97i12mylle1b8rtua].[avg:Profit:qk]</field>
            <field>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Region:nk]</field>
            <field>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{449467A3-A38E-4458-B353-B6B7C6FEB992}' />
    </window>
    <window class='worksheet' name='Discounts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Category:nk]</field>
            <field>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C11FB91-9600-4C11-8C2D-B1A32C2C1344}' />
    </window>
    <window class='worksheet' name='State-Wise Profits'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l4du09qe97i12mylle1b8rtua].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:Country:nk]</field>
            <field>[federated.0v5l4du09qe97i12mylle1b8rtua].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1DC8E5C2-0B1A-48C5-83DF-31733FA60ACD}' />
    </window>
    <window class='dashboard' maximized='true' name='Sales Board' tab-color='#17927d'>
      <viewpoints>
        <viewpoint name='Average Revenue'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Discounts'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Region Wise Sales &amp; Profits'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Segament Wise Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State-Wise Profits'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0CDCAA96-5F84-42B5-B511-A0557F803646}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Revenue' width='192'>
      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
      qqQKGsneLv4/HXE+xkMKtYAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Discounts' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Region Wise Sales &amp; Profits' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Board' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Segament Wise Sales' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='State-Wise Profits' width='192'>
      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
      j+eR/x+sixs+qskwTwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
